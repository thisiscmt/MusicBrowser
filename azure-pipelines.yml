trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'e0b8ce18-604b-466e-87b8-67cfbb5d61e4'

  # Web app name
  webAppName: 'cmt-mb-api'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'cmt-mb-api'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.12'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(projectRoot)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/music-browser-api-$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/music-browser-api-$(Build.BuildId).zip
            displayName: 'Upload package'
            artifact: drop

#  - stage: Deploy
#    displayName: 'Deploy Web App'
#    dependsOn: Build
#    condition: succeeded()
#    jobs:
#      - deployment: DeploymentJob
#        pool:
#          vmImage: $(vmImageName)
#        environment: $(environmentName)
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#
#                - task: UsePythonVersion@0
#                  inputs:
#                    versionSpec: '$(pythonVersion)'
#                  displayName: 'Use Python version'
#
#                - task: AzureWebApp@1
#                  displayName: 'Deploy Azure Web App : $(webAppName)'
#                  inputs:
#                    azureSubscription: $(azureServiceConnectionId)
#                    appName: $(webAppName)
#                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
