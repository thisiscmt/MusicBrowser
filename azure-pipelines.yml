trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.12'
  azureServiceConnectionId: 'e0b8ce18-604b-466e-87b8-67cfbb5d61e4'
  webAppName: 'cmt-mb-api'
  environmentName: 'cmt-mb-api'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build_API
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Install Python'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)/music-browser-api
            displayName: 'Install API dependencies'

          - task: ArchiveFiles@2
            displayName: 'Create API artifact'
            inputs:
              rootFolderOrFile: '$(projectRoot)/music-browser-api'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/music-browser-api.zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/music-browser-api.zip
            artifact: music-browser-api
            displayName: 'Upload API artifact'

#  - stage: Deploy
#    displayName: 'Deploy Web App'
#    dependsOn: Build
#    condition: succeeded()
#    jobs:
#      - deployment: DeploymentJob
#        environment: $(environmentName)
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#
#                - task: UsePythonVersion@0
#                  inputs:
#                    versionSpec: '$(pythonVersion)'
#                  displayName: 'Use Python version'
#
#                - task: AzureWebApp@1
#                  displayName: 'Deploy Azure Web App : $(webAppName)'
#                  inputs:
#                    azureSubscription: $(azureServiceConnectionId)
#                    appName: $(webAppName)
#                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
